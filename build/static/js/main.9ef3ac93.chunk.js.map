{"version":3,"sources":["contexts/CartContext.js","components/Item.js","components/ItemList.js","components/CartItem.js","components/CartList.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["CartContext","createContext","CartContextProvider","props","useState","cart","setCart","addIncrement","id","tempCart","selectedProduct","find","item","index","indexOf","product","count","total","price","Provider","value","addToCart","name","img","deleteCart","filter","children","Item","useContext","className","style","maxWidth","margin","src","alt","href","onClick","ItemList","state","database","phone","this","map","key","Component","CartItem","tprice","Fragment","width","heigth","size","CartList","context","reduce","a","c","toFixed","cartList","length","contextType","Navbar","mystyle","color","backgroundColor","padding","fontFamily","fontSize","textDecoration","display","to","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ef3ac93.chunk.js","sourcesContent":["import React,{createContext, useState} from 'react'\r\n//import { v4 as uuid } from 'uuid';\r\n\r\nexport const CartContext = createContext()\r\nexport const CartContextProvider=(props)=> {\r\n   const [cart,setCart]=useState([])\r\n   const addToCart=(id,name,price,img,count,total)=>{\r\n        let product= cart.find(item=> {return item.id === id})\r\n        if(product){\r\n          addIncrement(id)\r\n        }else{\r\n        setCart(cart=>[...cart,{id,name,price,img,count:count+1,total:price}])\r\n        }\r\n    }\r\n    const addIncrement = id =>{\r\n      //console.log(id);\r\n      let tempCart = [...cart];\r\n    const selectedProduct = tempCart.find(item => {\r\n      return item.id === id;\r\n    });\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count + 1;\r\n    product.total=product.price*product.count\r\n    setCart([...tempCart])\r\n      \r\n    }\r\n   const deleteCart = id =>{\r\n        setCart(cart.filter(item => item.id !== id))\r\n    }\r\n    return (\r\n            <CartContext.Provider value={{addToCart,cart,deleteCart}}>\r\n              {props.children}\r\n            </CartContext.Provider>\r\n    \r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport { CartContext } from '../contexts/CartContext'\r\n\r\nexport const Item = ({id,name,price,img,count,total}) => {\r\n    const {addToCart}=useContext(CartContext)\r\n    const handleSubmit = ()=>{\r\n        addToCart(id,name,price,img,count,total)\r\n        //console.log(id);\r\n        \r\n        \r\n    }\r\n    return (\r\n       \r\n            <div className=\"card col-sm-4\" >\r\n                  <img className=\"card-img-top\" style={{maxWidth:'230px',margin:\"0 auto\"}} src={img} alt=\"\" />\r\n                  <div className=\"card-body\" style={{margin:\"0 auto\"}}>\r\n                    <h4 className=\"card-title text-uppercase\">{name}</h4>\r\n                    <h5 className=\"card-text\">$ {price}</h5>\r\n                    <button href=\"#\" className=\"btn btn-primary\" onClick={handleSubmit}>Add To Cart</button>\r\n                    </div>\r\n            </div>   \r\n           \r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Item } from './Item'\r\n\r\nexport class ItemList extends Component {\r\n    state={\r\n        database:[\r\n            {id:1,name:'Google Pixel - Black',price:13,count:0,total:0,img:\"img/product-1.png\"},\r\n            {id:2,name:'Samsung S7',price:28,count:0,total:0,img:\"img/product-2.png\"},\r\n            {id:3,name:'HTC 10 - Black',price:38,count:0,total:0,img:\"img/product-3.png\"},\r\n            {id:4,name:'HTC 10 - White',price:132,count:0,total:0,img:\"img/product-4.png\"},\r\n            {id:5,name:'HTC Desire 626s',price:88,count:0,total:0,img:\"img/product-5.png\"},\r\n            {id:6,name:'Vintage Iphone',price:83,count:0,total:0,img:\"img/product-6.png\"},\r\n            {id:7,name:'Iphone 7',price:53,count:0,total:0,img:\"img/product-7.png\"},\r\n            {id:8,name:'Smashed Iphone',price:68,count:0,total:0,img:\"img/product-8.png\"}\r\n            \r\n        ]\r\n    }\r\n    render() {\r\n       const phone= this.state.database.map(item=>{\r\n           return(\r\n             \r\n            <Item key={item.id} id={item.id} img={item.img} name={item.name} count={item.count} total={item.total} price={item.price} />\r\n            \r\n        ) })\r\n        return (\r\n            <div className=\"row\"> \r\n                {phone}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemList\r\n","import React,{useContext} from 'react'\r\nimport { CartContext } from '../contexts/CartContext'\r\n\r\nexport const CartItem = ({name,img,tprice,id,count}) => {\r\n    const {deleteCart}= useContext(CartContext)\r\n    // let price = cart.map(item=>item.price)\r\n    // let total=price.reduce((a,c)=>a+c,0).toFixed(2)\r\n    //console.log(tprice);\r\n    \r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row my-1 text-capitalize text-center\">\r\n        <div className=\"col-10 mx-auto col-lg-2\">\r\n          <img\r\n            src={img}\r\n            style={{ width: \"5rem\", heigth: \"5rem\" }}\r\n            className=\"img-fluid\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"col-10 mx-auto col-lg-2 \">\r\n          <span className=\"d-lg-none\">product :</span> {name}\r\n        </div>\r\n        <div className=\"col-10 mx-auto col-lg-2 \">\r\n          <strong>\r\n            <span className=\"d-lg-none\">price :</span> ${tprice}\r\n          </strong>\r\n        </div>\r\n        <div className=\"col-10 mx-auto col-lg-2 my-2 my-lg-0 \">\r\n          <div className=\"d-flex justify-content-center\">\r\n            {count}\r\n          <div className=\"col-10 mx-auto col-lg-2 \">\r\n          <div className=\" cart-icon\" onClick={() => deleteCart(id)} >\r\n            <i className=\"fa fa-trash\" style={{size:'2x'}}/>\r\n          </div>\r\n        </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-10 mx-auto col-lg-2 \">\r\n          <strong>item total : ${tprice*count} </strong>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n    )\r\n    \r\n\r\n}\r\n","import React,{ Component} from 'react'\r\nimport { CartContext } from '../contexts/CartContext'\r\nimport { CartItem } from './CartItem'\r\n\r\nexport default class CartList extends Component {\r\n  static contextType = CartContext\r\n  render() {\r\n    const { cart } = this.context\r\n    //const {cart}= useContext(CartContext)\r\n    let price = cart.map(item=>item.total)\r\n    let total=price.reduce((a,c)=>a+c,0).toFixed(2)\r\n    const cartList=cart.map(item=>{\r\n        return(<CartItem name={item.name} count={item.count} tprice={item.price} id={item.id} key={item.id} img={item.img} />)\r\n    })\r\n        \r\n    return (\r\n        <React.Fragment>\r\n             \r\n           <div className=\"container-fluid text-center d-none d-lg-block\">\r\n        <div className=\"row \">\r\n          <div className=\"col-10 mx-auto col-lg-2\">\r\n            <p className=\"text-uppercase\">products</p>\r\n          </div>\r\n          <div className=\"col-10 mx-auto col-lg-2\">\r\n            <p className=\"text-uppercase\">name of product</p>\r\n          </div>\r\n          <div className=\"col-10 mx-auto col-lg-2\">\r\n            <p className=\"text-uppercase\">price</p>\r\n          </div>\r\n          <div className=\"col-10 mx-auto col-lg-2\">\r\n            <p className=\"text-uppercase\">quantity</p>\r\n          </div>\r\n          <div className=\"col-10 mx-auto col-lg-2\">\r\n            <p className=\"text-uppercase\">remove</p>\r\n          </div>\r\n          <div className=\"col-10 mx-auto col-lg-2\">\r\n            <p className=\"text-uppercase\">total</p>\r\n          </div>\r\n        </div>\r\n        {cartList}\r\n      </div>\r\n      <center><h1>Items in Cart: {cart.length}</h1>\r\n           <h2>Total: {total} $</h2></center>\r\n      \r\n        </React.Fragment>\r\n    )\r\n}\r\n}\r\n","import React,{useContext} from 'react'\r\nimport { Link} from \"react-router-dom\";\r\nimport { CartContext } from '../contexts/CartContext';\r\nexport const Navbar = () => {\r\n    const {cart}= useContext(CartContext)\r\n    const mystyle = {\r\n        color: \"white\",\r\n        backgroundColor: \"DodgerBlue\",\r\n        padding: \"10px\",\r\n        fontFamily: \"Arial\",\r\n        fontSize:\"25px\",\r\n        textDecoration:\"none\"\r\n      };\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                <nav className=\"navbar navbar-light bg-primary\">\r\n                <ul className=\"nav navbar-nav list-group align-items-center\" style={{display:\"inline - block\"}}>\r\n                <li style={{display:\"inline - block\"}}>\r\n                    <Link to=\"/\" style={mystyle}>Home</Link>\r\n                </li>\r\n                <li style={{display:\"inline - block\"}}>\r\n                    <Link to=\"/cart\" style={mystyle}>Cart {cart.length} </Link>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport { CartContextProvider } from './contexts/CartContext';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ItemList from './components/ItemList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport  CartList  from './components/CartList';\nimport { Navbar } from './components/Navbar';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <CartContextProvider>\n        \n      <BrowserRouter>\n      <Navbar />\n        <Route exact path=\"/\" component={ItemList} />\n        <Route path=\"/cart\" component={CartList} />\n        \n      </BrowserRouter>\n      </CartContextProvider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}